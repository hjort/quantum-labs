# -*- coding: utf-8 -*-
"""Qiskit-3hello.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1VKiZfvFfDe9D-BC5M8DIjAoKg7-thh2Y

https://youtu.be/RrUTwq5jKM4?si=rtr8WFGsmKjbd3TZ
"""

#!pip install -q qiskit
#!pip install -q qiskit-ibmq-provider
#!pip install -q qiskit_ibm_provider
#!pip install -q qiskit-aer

#!pip install -q pylatexenc

import qiskit

qiskit.__version__

qiskit.__qiskit_version__

api_token = '...'

from qiskit import IBMQ
IBMQ.save_account(api_token)

IBMQ.load_account()

qr = qiskit.QuantumRegister(2)
qr

cr = qiskit.ClassicalRegister(2)
cr

circuit = qiskit.QuantumCircuit(qr, cr)
circuit

# Commented out IPython magic to ensure Python compatibility.
# %matplotlib inline

circuit.draw()

circuit.h(qr[0])

circuit.draw(output='mpl')

circuit.cx(qr[0], qr[1])

circuit.draw(output='mpl')

circuit.measure(qr, cr)

circuit.draw(output='mpl')

simulator = qiskit.Aer.get_backend('qasm_simulator')
simulator

job = qiskit.execute(circuit, backend=simulator)
job

result = job.result()
result

from qiskit.tools.visualization import plot_histogram

plot_histogram(result.get_counts(circuit))

#IBMQ.load_account()

provider = IBMQ.get_provider('ibm-q')
provider

provider.backends()

qcomp = provider.get_backend('ibm_brisbane')
qcomp

job = qiskit.execute(circuit, backend=qcomp)
job

from qiskit.tools.monitor import job_monitor

job_monitor(job)

result = job.result()
result

plot_histogram(result.get_counts(circuit))

